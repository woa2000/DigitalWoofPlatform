{
  "plan": {
    "title": "F02 Brand Onboarding - Execution Plan",
    "version": "1.1",
    "status": "executing",
    "run_mode": "execute",
    "generated_at": "2025-09-05T00:00:00Z"
  },
  "tasks": [
    {
      "id": "T-001",
      "title": "Implementar Schema de Banco de Dados",
      "owner": "Database_Admin",
      "status": "done",
      "effort": 3,
      "depends_on": [],
      "acceptance": [
        "✅ Schema valida com drizzle-kit generate",
        "✅ Migration executa sem erros no ambiente de test",
        "✅ Índices de performance criados (user_id, normalized_url, status)",
        "✅ Constraints de uniqueness funcionando (hash, normalized_url)",
        "✅ RLS policies aplicadas e testadas"
      ],
      "observability": [
        "Migration logs estruturados",
        "Métricas de query performance",
        "Database connection monitoring"
      ],
      "security_notes": [
        "RLS policies aplicadas",
        "Acesso restrito por accountId",
        "Constraints para data integrity"
      ],
      "artifacts": [
        "shared/schema.ts",
        "server/migrations/002_brand_onboarding.sql"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "✅ CONCLUÍDO: Brand onboarding schema implementado com sucesso"
    },
    {
      "id": "T-005",
      "title": "Implementar Estrutura Base do Wizard",
      "owner": "Frontend_Developer",
      "status": "done",
      "effort": 4,
      "depends_on": ["T-001"],
      "acceptance": [
        "✅ Hook useOnboarding com navegação entre 5 steps",
        "✅ Estado persistido com localStorage backup",
        "✅ Validação estruturada com Zod schemas",
        "✅ Componente OnboardingWizard com progress tracking",
        "✅ Navegação bidirecional funcionando"
      ],
      "observability": [
        "Estado do wizard logado",
        "Métricas de abandonos por step",
        "Performance de navegação"
      ],
      "security_notes": [
        "Dados sensíveis não persistem no localStorage",
        "Validação client-side + server-side",
        "XSS protection aplicada"
      ],
      "artifacts": [
        "client/src/hooks/useOnboarding.ts",
        "client/src/components/onboarding/OnboardingWizard.tsx",
        "shared/types/onboarding.ts"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "✅ CONCLUÍDO: Base structure com navegação completa implementada"
    },
    {
      "id": "T-007",
      "title": "Implementar Step de Configuração de Tom",
      "owner": "Frontend_Developer",
      "status": "done",
      "effort": 3,
      "depends_on": ["T-005"],
      "acceptance": [
        "✅ 4 sliders interativos (confiança, acolhimento, humor, especialização)",
        "✅ Exemplos de texto dinâmicos baseados nos valores",
        "✅ Validação com alertas para extremos",
        "✅ Interface responsiva e acessível",
        "✅ Estado sincronizado com useOnboarding hook"
      ],
      "observability": [
        "Métricas de distribuição de valores",
        "Tempo gasto no step",
        "Padrões de ajuste dos sliders"
      ],
      "security_notes": [
        "Valores sanitizados antes de persistir",
        "Range validation aplicada",
        "No XSS vectors nos exemplos"
      ],
      "artifacts": [
        "client/src/components/onboarding/steps/ToneConfigStep.tsx"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "✅ CONCLUÍDO: Configuração de tom com sliders e exemplos dinâmicos"
    },
    {
      "id": "T-008",
      "title": "Implementar Step de Configuração de Linguagem",
      "owner": "Frontend_Developer",
      "status": "done",
      "effort": 3,
      "depends_on": ["T-005"],
      "acceptance": [
        "✅ Tags input para termos preferidos (max 20)",
        "✅ Tags input para termos a evitar (max 15)",
        "✅ Tags input para CTAs preferidas (max 5)",
        "✅ Exemplos dinâmicos com termos aplicados",
        "✅ Validação de limites e feedback visual"
      ],
      "observability": [
        "Distribuição de quantidade de termos",
        "Termos mais comuns utilizados",
        "Taxa de abandono no step"
      ],
      "security_notes": [
        "Sanitização de input de texto",
        "Validação de caracteres permitidos",
        "Limite de tamanho por termo"
      ],
      "artifacts": [
        "client/src/components/onboarding/steps/LanguageConfigStep.tsx"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "✅ CONCLUÍDO: Configuração de linguagem com tags interativas e preview"
    },
    {
      "id": "T-009",
      "title": "Implementar Step de Valores da Marca",
      "owner": "Frontend_Developer",
      "status": "done",
      "effort": 4,
      "depends_on": ["T-005"],
      "acceptance": [
        "✅ Textarea para missão da marca (opcional, 200 chars)",
        "✅ Adição dinâmica de valores (max 5) com peso",
        "✅ Slider para importância de cada valor",
        "✅ Preview do Brand Voice JSON gerado",
        "✅ Disclaimer de compliance visível"
      ],
      "observability": [
        "Distribuição de pesos dos valores",
        "Tamanho médio de missão",
        "Quantidade média de valores por marca"
      ],
      "security_notes": [
        "Validação de tamanho de texto",
        "Sanitização de inputs",
        "Compliance disclaimer obrigatório"
      ],
      "artifacts": [
        "client/src/components/onboarding/steps/BrandValuesStep.tsx"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "✅ CONCLUÍDO: Valores da marca com preview JSON e disclaimer compliance"
    },
    {
      "id": "T-002",
      "title": "Implementar Infraestrutura de Upload de Logo",
      "owner": "Backend_Developer",
      "status": "todo",
      "effort": 3,
      "depends_on": ["T-001"],
      "acceptance": [
        "Endpoint POST /api/onboarding/logo/upload",
        "Validação de formato (PNG, JPG, SVG)",
        "Limite de tamanho (5MB)",
        "Upload para Supabase Storage",
        "Retorno de URL pública temporária"
      ],
      "observability": [
        "Métricas de upload (size, duration, format)",
        "Error rates por tipo de arquivo",
        "Storage usage tracking"
      ],
      "security_notes": [
        "Validação de MIME type real",
        "Antivirus scan via ClamAV",
        "URL signed com expiração"
      ],
      "artifacts": [
        "server/routes/brand-onboarding.ts",
        "server/services/storage.service.ts"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "Backend infrastructure para processamento de logo"
    },
    {
      "id": "T-003",
      "title": "Implementar Processamento de Imagem",
      "owner": "Backend_Developer",
      "status": "todo",
      "effort": 4,
      "depends_on": ["T-002"],
      "acceptance": [
        "Sharp.js para redimensionamento automático",
        "Extração de paleta de cores com node-vibrant",
        "Geração de metadata (dimensões, formato, etc)",
        "Processamento assíncrono com status tracking",
        "Fallback para cores default se extração falhar"
      ],
      "observability": [
        "Tempo de processamento por imagem",
        "Taxa de sucesso de extração de paleta",
        "Performance metrics do Sharp.js"
      ],
      "security_notes": [
        "Validação de dimensões antes do processamento",
        "Timeout para evitar DoS",
        "Cleanup de arquivos temporários"
      ],
      "artifacts": [
        "server/services/image-processing.service.ts",
        "server/utils/color-extraction.ts"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "Pipeline de processamento de imagem com extração de paleta"
    },
    {
      "id": "T-004",
      "title": "Implementar Extração de Paleta de Cores",
      "owner": "Backend_Developer", 
      "status": "todo",
      "effort": 2,
      "depends_on": ["T-003"],
      "acceptance": [
        "node-vibrant configurado para qualidade balanceada",
        "Extração de 5-8 cores principais",
        "Formato hexadecimal padronizado",
        "Fallback para paleta default da marca",
        "Validação de contraste mínimo"
      ],
      "observability": [
        "Distribuição de quantidade de cores extraídas",
        "Tempo médio de extração",
        "Taxa de uso de fallback"
      ],
      "security_notes": [
        "Validação de formato de cores",
        "Sanitização de outputs",
        "No information leakage"
      ],
      "artifacts": [
        "server/utils/color-extraction.ts",
        "Integração com image-processing.service.ts"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "Specialized color extraction com node-vibrant"
    },
    {
      "id": "T-006",
      "title": "Implementar Step de Upload de Logo",
      "owner": "Frontend_Developer",
      "status": "todo",
      "effort": 3,
      "depends_on": ["T-002", "T-003"],
      "acceptance": [
        "Drag & drop interface para upload",
        "Preview do logo carregado",
        "Progress bar durante upload/processamento", 
        "Exibição da paleta de cores extraída",
        "Feedback de erro para formatos inválidos"
      ],
      "observability": [
        "Taxa de abandono no upload",
        "Formatos de arquivo mais utilizados",
        "Tempo médio de upload"
      ],
      "security_notes": [
        "Validação client-side + server-side",
        "Preview sem execução de código",
        "Size limits enforced"
      ],
      "artifacts": [
        "client/src/components/onboarding/steps/LogoUploadStep.tsx",
        "client/src/hooks/useFileUpload.ts"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "Interface de upload com processamento visual"
    },
    {
      "id": "T-010",
      "title": "Implementar Preview e Geração de Brand Voice",
      "owner": "Frontend_Developer",
      "status": "todo",
      "effort": 3,
      "depends_on": ["T-006", "T-007", "T-008", "T-009"],
      "acceptance": [
        "Preview completo de todas configurações",
        "Geração do Brand Voice JSON estruturado",
        "Download do arquivo de configuração",
        "Resumo visual das configurações",
        "Botão para finalizar onboarding"
      ],
      "observability": [
        "Taxa de conversão final",
        "Tempo total de onboarding",
        "Distribuição de configurações"
      ],
      "security_notes": [
        "Validação final de todos dados",
        "JSON sanitizado antes de download",
        "No sensitive data exposure"
      ],
      "artifacts": [
        "client/src/components/onboarding/steps/PreviewStep.tsx",
        "client/src/utils/brand-voice-generator.ts"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "Finalização com preview e download do Brand Voice"
    },
    {
      "id": "T-011",
      "title": "Implementar Persistência de Estado",
      "owner": "Frontend_Developer",
      "status": "todo",
      "effort": 2,
      "depends_on": ["T-005"],
      "acceptance": [
        "Auto-save a cada mudança significativa",
        "Recovery de sessão após reload",
        "Limpeza de dados temporários após conclusão",
        "Backup em localStorage para offline",
        "Sync com backend quando online"
      ],
      "observability": [
        "Taxa de recovery de sessão",
        "Frequência de auto-save",
        "Casos de perda de dados"
      ],
      "security_notes": [
        "Dados sensíveis não ficam em localStorage",
        "Encryption de dados temporários",
        "TTL para limpeza automática"
      ],
      "artifacts": [
        "Melhorias no useOnboarding.ts",
        "client/src/utils/session-manager.ts"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "Sistema robusto de persistência e recovery"
    },
    {
      "id": "T-012",
      "title": "Implementar Testes Unitários Frontend",
      "owner": "QA_Engineer",
      "status": "todo",
      "effort": 4,
      "depends_on": ["T-007", "T-008", "T-009"],
      "acceptance": [
        "RTL + Jest para componentes do wizard",
        "Testes de navegação entre steps",
        "Validação de formulários testada",
        "Mocking de hooks e API calls",
        "Cobertura mínima de 80%"
      ],
      "observability": [
        "Coverage reports",
        "Test execution performance",
        "Flaky test detection"
      ],
      "security_notes": [
        "Mock data não contém dados reais",
        "Test isolation garantida",
        "No API calls reais em testes"
      ],
      "artifacts": [
        "client/src/components/onboarding/__tests__/",
        "client/src/hooks/__tests__/useOnboarding.test.ts"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "Cobertura de testes para componentes críticos"
    },
    {
      "id": "T-013",
      "title": "Implementar Testes E2E",
      "owner": "QA_Engineer",
      "status": "todo",
      "effort": 3,
      "depends_on": ["T-010", "T-011"],
      "acceptance": [
        "Playwright para fluxo completo de onboarding",
        "Teste de upload de logo com diferentes formatos",
        "Validação de geração do Brand Voice JSON",
        "Teste de recuperação de sessão",
        "Cenários de erro e edge cases"
      ],
      "observability": [
        "E2E test metrics",
        "Performance do fluxo completo",
        "Screenshot diffs para regression"
      ],
      "security_notes": [
        "Test data cleanup após execução",
        "No dados sensíveis em test fixtures",
        "Isolated test environment"
      ],
      "artifacts": [
        "e2e/onboarding.spec.ts",
        "e2e/fixtures/test-logos/",
        "e2e/utils/onboarding-helpers.ts"
      ],
      "last_update": "2025-09-05T00:00:00Z",
      "notes": "Validação completa do fluxo de usuário"
    }
  ],
  "blocks": []
}